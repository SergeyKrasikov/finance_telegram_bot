name: CI/CD for Finance Telegram Bot

on:
  push:
    branches:
      - main      # Production сборка
      - test      # Тестовая сборка

jobs:
  # Тестовая сборка для ветки test
  test_build:
    if: github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy test environment
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "Starting test environment deployment..."
            TEST_DIR=~/finance_bot_test

            # Создаем директорию для теста
            mkdir -p $TEST_DIR
            cd $TEST_DIR

            # Проверяем, инициализирован ли репозиторий
            if [ ! -d ".git" ]; then
              git init
              git remote add origin https://github.com/${{ github.repository }}.git
            fi

            # Пуллим последние изменения из ветки test
            git fetch origin test
            git checkout test
            git reset --hard origin/test

            # Сборка и перезапуск контейнеров
            docker-compose -f docker-compose.yml build
            docker-compose -f docker-compose.yml down
            # Удаление неиспользуемых volumes
            docker volume prune -f

            docker-compose -f docker-compose.yml up -d --force-recreate --remove-orphans
            echo "Environment updated successfully."

            echo "Test environment updated successfully."

  # Продакшн сборка для ветки main
  production_build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy production environment
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "Starting production environment deployment..."
            cd ~/finance_telegram_bot

            # Пуллим последние изменения из ветки main
            git reset --hard
            git pull origin main

            # Сборка и перезапуск продакшн контейнеров
            docker-compose --env-file .env -f docker-compose.yml build
            docker-compose --env-file .env -f docker-compose.yml down
            docker-compose --env-file .env -f docker-compose.yml up -d

            echo "Production environment updated successfully."
